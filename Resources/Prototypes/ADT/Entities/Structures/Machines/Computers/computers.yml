- type: entity
  parent: BaseComputer
  id: ADTSpaceSecComputerId
  name: space sec ID card computer
  description: Terminal for programming Nanotrasen employee ID cards to access parts of the station.
  components:
  - type: IdCardConsole
    privilegedIdSlot:
      name: id-card-console-privileged-id
      ejectSound: /Audio/Machines/id_swipe.ogg
      insertSound: /Audio/Weapons/Guns/MagIn/batrifle_magin.ogg
      ejectOnBreak: true
      swap: false
      whitelist:
        components:
        - IdCard
    targetIdSlot:
      name: id-card-console-target-id
      ejectSound: /Audio/Machines/id_swipe.ogg
      insertSound: /Audio/Weapons/Guns/MagIn/batrifle_magin.ogg
      ejectOnBreak: true
      swap: false
      whitelist:
        components:
        - IdCard
    accessLevels: [
      "SpaceSecOfficial",
      "SpaceSecMaintenance",
      "SpaceSecSecurity",
      "SpaceSecArmory",
      "SpaceSecExternal",
      "SpaceSecCommand",]

  - type: ActivatableUI
    key: enum.IdCardConsoleUiKey.Key
  - type: UserInterface
    interfaces:
      enum.IdCardConsoleUiKey.Key:
        type: IdCardConsoleBoundUserInterface
  - type: CrewManifestViewer
    ownerKey: enum.IdCardConsoleUiKey.Key
  - type: Sprite
    layers:
    - map: ["computerLayerBody"]
      state: computer
    - map: ["computerLayerKeyboard"]
      state: generic_keyboard
    - map: ["computerLayerScreen"]
      sprite: ADT/Structures/Machines/space_sec_computer.rsi
      state: id
    - map: ["computerLayerKeys"]
      state: syndie_key
  - type: Computer
    board: IDComputerCircuitboard
  - type: PointLight
    radius: 1.5
    energy: 1.6
    color: "#D3D3D3"
  - type: Tag
    tags:
    - EmagImmune
  - type: ItemSlots
  - type: ContainerContainer
    containers:
      board: !type:Container
      IdCardConsole-privilegedId: !type:ContainerSlot
      IdCardConsole-targetId: !type:ContainerSlot

- type: entity
  parent: BaseComputerShuttle
  id: ADTComputerShuttleSalvage
  name: salvage shuttle console
  description: Used to pilot the salvage shuttle.
  components:
    - type: Sprite
      layers:
        - map: ["computerLayerBody"]
          state: computer
        - map: ["computerLayerKeyboard"]
          state: generic_keyboard
        - map: ["computerLayerScreen"]
          state: shuttle
        - map: ["computerLayerKeys"]
          state: generic_keys
    - type: DroneConsole
      components:
        - type: SalvageShuttle
    - type: RadarConsole
      maxRange: 256
    - type: PointLight
      radius: 1.5
      energy: 1.6
      color: "#43ccb5"
    - type: Computer
      board: ADTSalvageShuttleConsoleCircuitboard
    # - type: StealTarget
    #   stealGroup: SalvageShuttleConsoleCircuitboard

- type: entity
  parent: BaseComputerShuttle
  id: ADTComputerSecShuttle
  name: salvage shuttle console
  description: Used to pilot the salvage shuttle.
  components:
    - type: Sprite
      layers:
        - map: ["computerLayerBody"]
          state: computer
        - map: ["computerLayerKeyboard"]
          state: generic_keyboard
        - map: ["computerLayerScreen"]
          state: shuttle
        - map: ["computerLayerKeys"]
          state: generic_keys
    - type: DroneConsole
      components:
        - type: SecShuttle
    - type: RadarConsole
      maxRange: 256
    - type: PointLight
      radius: 1.5
      energy: 1.6
      color: "#43ccb5"
    - type: Computer
      board: ADTSecShuttleConsoleCircuitboard

- type: entity
  id: ADTComputerPalletConsolePirate
  parent: BaseComputerAiAccess
  name: pirate sale computer
  description: Used to sell goods loaded onto cargo pallets.
  components:
  - type: Sprite
    layers:
    - map: ["computerLayerBody"]
      state: computer
    - map: ["computerLayerKeyboard"]
      state: generic_keyboard
    - map: ["computerLayerScreen"]
      state: request
    - map: ["computerLayerKeys"]
      state: tech_key
    - map: [ "enum.WiresVisualLayers.MaintenancePanel" ]
      state: generic_panel_open
  - type: Anchorable
    flags:
    - Anchorable
  - type: CargoPalletConsole
  - type: ActivatableUI
    key: enum.CargoPalletConsoleUiKey.Sale
  - type: UserInterface
    interfaces:
      enum.CargoPalletConsoleUiKey.Sale:
        type: CargoPalletConsoleBoundUserInterface
      enum.WiresUiKey.Key:
        type: WiresBoundUserInterface
  - type: PointLight
    radius: 1.5
    energy: 1.6
    color: "#b89f25"

- type: entity #прототип консоли для управления турелями (скопировал с базовой консоли, не имеет платы из которой собирается, пока что чисто выдаётся)
  parent: BaseComputer
  id: TurretControllerConsole
  name: turret-controller-console
  description: RATATATATATATATA!
  components:
  - type: StationAiWhitelist
  - type: DeviceList
  - type: DeviceNetwork
    deviceNetId: Wired
  - type: Sprite
    layers:
    - map: ["computerLayerBody"]
      state: computer
    - map: ["computerLayerKeyboard"]
      state: generic_keyboard
    - map: ["computerLayerScreen"]
      state: generic
    - map: ["computerLayerKeys"]
      state: generic_keys
  - type: ApcPowerReceiver
    powerLoad: 100 #We want this to fail first so I transferred most of the scanner and pod's power here. (3500 in total)
  # - type: Computer
  #   board: TurretControllerConsoleCircuitboard
  - type: PointLight
    radius: 1.5
    energy: 1.6
    color: "#1f8c28"
  - type: DeviceLinkSource
    range: 20 #не сильно важная хуйня, растояние на котором можно залинкать, турели как допишу - будут сами отлинкиваться по причине потери связи из за растояния, будь то отломанная турель летящая на куске корабля, или дрон)
    ports:
      - TurretControllerSender #собственно наш порт
  - type: TurretController
  - type: Damageable
    damageContainer: StructuralInorganic
    damageModifierSet: StructuralMetallicStrong
#SS40k end

## Supermatter
- type: entity
  parent: [ BaseComputerAiAccess, BaseEngineeringContraband ]
  id: ComputerSupermatter
  name: supermatter monitoring console
  description: Used to monitor the status of supermatter crystals.
  components:
  - type: Computer
    board: SupermatterComputerCircuitboard
  - type: Sprite
    layers:
    - map: ["computerLayerBody"]
      state: computer
    - map: ["computerLayerKeyboard"]
      state: generic_keyboard
    - map: ["computerLayerScreen"]
      state: supermatter-0
    - map: ["computerLayerKeys"]
      state: supermatter_keys
    - map: [ "enum.WiresVisualLayers.MaintenancePanel" ]
      state: generic_panel_open
  - type: PointLight
    radius: 1.5
    energy: 1.6
    color: "#0f704b"
  - type: GenericVisualizer
    visuals:
      enum.ComputerVisuals.Powered:
        computerLayerScreen:
          True: { visible: true, shader: unshaded }
          False: { visible: false }
        computerLayerKeys:
          True: { visible: true, shader: unshaded }
          False: { visible: true, shader: shaded }
      enum.SupermatterConsoleVisuals.ComputerLayerScreen:
        computerLayerScreen:
          0: { state: supermatter-0 }
          1: { state: supermatter-1 }
          2: { state: supermatter-2 }
          3: { state: supermatter-3 }
          4: { state: supermatter-4 }
          5: { state: supermatter-5 }
          6: { state: supermatter-6 }
      enum.WiresVisuals.MaintenancePanelState:
        enum.WiresVisualLayers.MaintenancePanel:
          True: { visible: false }
          False: { visible: true }
  - type: SupermatterConsole
  - type: ActivatableUI
    key: enum.SupermatterConsoleUiKey.Key
  - type: UserInterface
    interfaces:
        enum.SupermatterConsoleUiKey.Key:
            type: SupermatterConsoleBoundUserInterface
        enum.WiresUiKey.Key:
          type: WiresBoundUserInterface