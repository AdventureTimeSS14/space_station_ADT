
# ADT Closets update

# Basic
- type: entity
  id: LockerSteel
  parent: LockerBaseSecure
  name: secure closet
  components:
  - type: Appearance
  - type: EntityStorageVisuals
    stateBaseClosed: generic
    stateDoorOpen: generic_open4
    stateDoorClosed: generic_door_sec

# Bar
- type: entity
  id: LockerBooze
  parent: LockerBase
  name: booze storage
  description: This is where the bartender keeps the booze.
  components:
  - type: Appearance
  - type: EntityStorageVisuals
    stateBaseClosed: cabinet
    stateDoorOpen: cabinet_open
    stateDoorClosed: cabinet_door
  - type: AccessReader
    access: [["Bar"]]
  - type: EntityStorage
    closeSound:
      path: /Audio/Effects/woodenclosetclose.ogg
    openSound:
      path: /Audio/Effects/woodenclosetopen.ogg

# Cargo
- type: entity
  id: LockerQuarterMaster
  parent: LockerBaseSecure
  name: quartermaster's locker
  components:
  - type: Appearance
  - type: EntityStorageVisuals
    stateBaseClosed: qm
    stateDoorOpen: qm_open
    stateDoorClosed: qm_door
  - type: AccessReader
    access: [["Quartermaster"]]

- type: entity
  id: LockerSalvageSpecialist
  parent: LockerBaseSecure
  name: salvage specialist's equipment
  description: Nevermind the pickaxe.
  components:
  - type: Appearance
  - type: EntityStorageVisuals
    stateBaseClosed: mining
    stateDoorOpen: mining_open
    stateDoorClosed: mining_door
  - type: AccessReader
    access: [["Salvage"]]

- type: entity
  id: LockerCargo
  parent: LockerBaseSecure
  name: cargo's locker
  components:
  - type: Appearance
  - type: EntityStorageVisuals
    stateBaseClosed: cargo
    stateDoorOpen: color_black3_open
    stateDoorClosed: cargo_door
  - type: AccessReader
    access: [["Cargo"]]

# Command
- type: entity
  id: LockerCaptain
  parent: LockerBaseSecure
  name: captain's locker
  components:
  - type: Appearance
  - type: EntityStorageVisuals
    stateBaseClosed: cap
    stateDoorOpen: cap_open
    stateDoorClosed: cap_door
  - type: AccessReader
    access: [["Captain"]]

- type: entity
  id: LockerHeadOfPersonnel
  parent: LockerBaseSecure
  name: head of personnel's locker
  components:
  - type: Appearance
  - type: EntityStorageVisuals
    stateBaseClosed: hop
    stateDoorOpen: hop_open
    stateDoorClosed: hop_door
  - type: AccessReader
    access: [["HeadOfPersonnel"]]

# CE
- type: entity
  id: LockerChiefEngineer
  parent: LockerBaseSecure
  name: chief engineer's locker
  components:
  - type: Appearance
  - type: EntityStorageVisuals
    stateBaseClosed: ce
    stateDoorOpen: color_white2_open
    stateDoorClosed: ce_door
  - type: AccessReader
    access: [ [ "ChiefEngineer" ] ]

# Electrical supplies
- type: entity
  id: LockerElectricalSupplies
  parent: LockerBase
  name: electrical supplies locker
  components:
  - type: Appearance
  - type: EntityStorageVisuals
    stateBaseClosed: eng
    stateDoorOpen: eng_open
    stateDoorClosed: eng_elec_door
  - type: AccessReader
    access: [ [ "Engineering" ] ]

# Welding supplies
- type: entity
  id: LockerWeldingSupplies
  parent: LockerBase
  name: welding supplies locker
  components:
  - type: Appearance
  - type: EntityStorageVisuals
    stateBaseClosed: eng
    stateDoorOpen: eng_open
    stateDoorClosed: eng_weld_door
  - type: AccessReader
    access: [ [ "Engineering" ] ]

# Atmos tech
- type: entity
  id: LockerAtmospherics
  parent: LockerBase
  name: atmospheric technician's locker
  components:
  - type: Appearance
  - type: EntityStorageVisuals
    stateBaseClosed: atmos
    stateDoorOpen: eng_secure_open
    stateDoorClosed: atmos_door
  - type: AccessReader
    access: [ [ "Atmospherics" ] ]

# Engineer
- type: entity
  id: LockerEngineer
  parent: LockerBase
  name: engineer's locker
  components:
  - type: Appearance
  - type: EntityStorageVisuals
    stateBaseClosed: eng
    stateDoorOpen: eng_secure_open
    stateDoorClosed: eng_secure_door
  - type: AccessReader
    access: [ [ "Engineering" ] ]

# Freezer
- type: entity
  id: LockerFreezerBase
  parent: LockerBase
  name: freezer
  suffix: No Access
  components:
  - type: Appearance
  - type: EntityStorageVisuals
    stateBaseClosed: freezer
    stateDoorOpen: freezer_open
    stateDoorClosed: freezer_door
  - type: ExplosionResistance
    damageCoefficient: 0.50
  - type: AntiRottingContainer
  - type: Construction
    graph: ClosetFreezer
    node: done
    containers:
    - entity_storage

- type: entity
  id: LockerFreezer
  parent: LockerFreezerBase
  name: freezer
  suffix: Kitchen, Locked
  components:
  - type: AccessReader
    access: [ [ "Kitchen" ] ]

- type: entity
  id: LockerMiniFreezer
  parent: LockerFreezerBase
  name: minifreezer
  suffix: Bar, Locked
  components:
  - type: Appearance
  - type: Sprite
    sprite: Structures/Storage/closet.rsi
    noRot: true
    layers:
    - state: minifreezer
      map: ["enum.StorageVisualLayers.Base"]
    - state: minifreezer_door
      map: ["enum.StorageVisualLayers.Door"]
    - state: locked
      map: ["enum.LockVisualLayers.Lock"]
      shader: unshaded
    - state: welded_minifreezer
      visible: false
      map: ["enum.WeldableLayers.BaseWelded"]
  - type: EntityStorageVisuals
    stateBaseClosed: minifreezer
    stateDoorOpen: minifreezer_open
    stateDoorClosed: minifreezer_door
  - type: AccessReader
    access: [ [ "Bar" ] ]

# Botanist
- type: entity
  id: LockerBotanist
  parent: LockerBase
  name: botanist's locker
  components:
  - type: Appearance
  - type: EntityStorageVisuals
    stateBaseClosed: hydro
    stateDoorOpen: hydro_open
    stateDoorClosed: hydro_door
  - type: AccessReader
    access: [ [ "Hydroponics" ] ]

# Medicine
- type: entity
  id: LockerMedicine
  parent: LockerBase
  name: medicine locker
  description: Filled to the brim with medical junk.
  components:
  - type: Appearance
  - type: EntityStorageVisuals
    stateBaseClosed: medical
    stateDoorOpen: color_white2_open
    stateDoorClosed: medical_door
  - type: AccessReader
    access: [ [ "Medical" ] ]

# Medical doctor
- type: entity
  id: LockerMedical
  parent: LockerBase
  name: medical doctor's locker
  components:
  - type: Appearance
  - type: EntityStorageVisuals
    stateBaseClosed: med
    stateDoorOpen: color_white3_open
    stateDoorClosed: med_door
  - type: AccessReader
    access: [ [ "Medical" ] ]

# Paramedic
- type: entity
  id: LockerParamedic
  parent: LockerBase
  name: paramedic's locker
  components:
  - type: Appearance
  - type: EntityStorageVisuals
    stateBaseClosed: paramedic
    stateDoorOpen: paramedic_open
    stateDoorClosed: paramedic_door
  - type: AccessReader
    access: [ [ "Medical" ] ]


# Chemical
- type: entity
  id: LockerChemistry
  parent: LockerBase
  name: chemical locker
  components:
  - type: Appearance
  - type: EntityStorageVisuals
    stateBaseClosed: chemical
    stateDoorOpen: color_white2_open
    stateDoorClosed: chemical_door
  - type: AccessReader
    access: [ [ "Chemistry" ] ]

- type: entity
  id: LockerHazardChemistry
  parent: LockerBase
  name: hazard chemistry locker
  components:
  - type: Appearance
  - type: EntityStorageVisuals
    stateBaseClosed: medical
    stateDoorOpen: color_white_open
    stateDoorClosed: hazard_door
  - type: AccessReader
    access: [ [ "Chemistry" ] ]

# CMO
- type: entity
  id: LockerChiefMedicalOfficer
  parent: LockerBaseSecure
  name: chief medical officer's locker
  components:
  - type: Appearance
  - type: EntityStorageVisuals
    stateBaseClosed: cmo
    stateDoorOpen: cmo_open
    stateDoorClosed: cmo_door
  - type: AccessReader
    access: [ [ "ChiefMedicalOfficer" ] ]

# Science
- type: entity
  id: LockerResearchDirector
  parent: LockerBase
  name: research director's locker
  components:
  - type: Appearance
  - type: EntityStorageVisuals
    stateBaseClosed: rd
    stateDoorOpen: rd_open
    stateDoorClosed: rd_door
  - type: AccessReader
    access: [ [ "ResearchDirector" ] ]

- type: entity
  id: LockerScientist
  parent: LockerBase
  name: scientist's locker
  components:
  - type: Appearance
  - type: EntityStorageVisuals
    stateBaseClosed: science
    stateDoorOpen: color_white-pink2_open
    stateDoorClosed: science_door
  - type: AccessReader
    access: [ [ "Research" ] ]

# HoS
- type: entity
  id: LockerHeadOfSecurity
  parent: LockerBaseSecure
  name: head of security's locker
  components:
  - type: Appearance
  - type: EntityStorageVisuals
    stateBaseClosed: hos
    stateDoorOpen: hos_open
    stateDoorClosed: hos_door
  - type: AccessReader
    access: [["HeadOfSecurity"]]

# Warden
- type: entity
  id: LockerWarden
  parent: LockerBaseSecure
  name: warden's locker
  components:
  - type: Appearance
  - type: EntityStorageVisuals
    stateBaseClosed: warden
    stateDoorOpen: color_red_open
    stateDoorClosed: warden_door
  - type: AccessReader
    access: [["Armory"]]

# Armory
- type: entity
  id: LockerArmory
  parent: LockerBaseSecure
  name: armory locker
  components:
  - type: Appearance
  - type: EntityStorageVisuals
    stateBaseClosed: armory
    stateDoorOpen: color_red_open
    stateDoorClosed: armory_door
  - type: AccessReader
    access: [["Armory"]]

# Correction Officer
- type: entity
  id: LockerCorrectionOfficer
  parent: LockerBaseSecure
  name: correction officer locker
  components:
  - type: Appearance
  - type: EntityStorageVisuals
    stateBaseClosed: correctionofficer
    stateDoorOpen: color_red_open
    stateDoorClosed: correctionofficer_door
  - type: AccessReader
    access: [["Security"]]

# Brigmedic
- type: entity
  id: LockerBrigmedic
  parent: LockerBaseSecure
  name: brigmedic locker
  components:
  - type: Appearance
  - type: EntityStorageVisuals
    stateBaseClosed: brigmedic
    stateDoorOpen: color_red_open
    stateDoorClosed: brigmedic_door
  - type: AccessReader
    access: [["Security"]] #ADT-tweak

# Security Officer
- type: entity
  id: LockerSecurity
  parent: LockerBaseSecure
  name: security officer's locker
  components:
  - type: Appearance
  - type: EntityStorageVisuals
    stateBaseClosed: sec
    stateDoorOpen: color_red_open
    stateDoorClosed: sec_door
  - type: AccessReader
    access: [["Security"]]

- type: entity
  id: GunSafe
  parent: LockerBaseSecure
  name: gun safe
  components:
  - type: Appearance
  - type: EntityStorageVisuals
    stateBaseClosed: shotguncase
    stateDoorOpen: shotguncase_open
    stateDoorClosed: shotguncase_door
  - type: AccessReader
    access: [["Armory"]]

# Detective
- type: entity
  id: LockerDetective
  parent: LockerBooze
  name: detective's cabinet
  description: Usually cold and empty... like your heart.
  components:
  - type: AccessReader
    access: [["Detective"]]

- type: entity
  id: LockerEvidence
  parent: LockerBaseSecure
  name: evidence locker
  description: To store bags of bullet casings and detainee belongings.
  components:
  - type: EntityStorageVisuals
    stateBaseClosed: armory
    stateDoorOpen: color_red_open
    stateDoorClosed: evidence_door
  - type: AccessReader
    access: [["Security"]]

# Syndicate
- type: entity
  id: LockerSyndicatePersonal
  name: syndicate locker
  parent: LockerBaseSecure
  description: It's a personal storage unit for operative gear.
  components:
  - type: Appearance
  - type: EntityStorageVisuals
    stateBaseClosed: syndicate
    stateDoorOpen: color_black2_open
    stateDoorClosed: syndicate_door

# Bluespace
- type: entity
  id: LockerBluespaceStation
  name: bluespace locker
  suffix: once to station
  parent: LockerSyndicatePersonal
  description: Advanced locker technology.
  components:
    - type: BluespaceLocker
      minBluespaceLinks: 1
      behaviorProperties:
        delay: 1
        actOnOpen: false
        bluespaceEffectOnInit: true
        bluespaceEffectOnTeleportSource: true
        bluespaceEffectOnTeleportTarget: true
        destroyAfterUses: 1
        destroyAfterUsesMinItemsToCountUse: 1
        destroyType: Delete
      autoLinksUseProperties: true
      autoLinkProperties:
        actOnOpen: false
        actOnClose: false
        destroyAfterUses: 2
        destroyType: DeleteComponent

# Clown
- type: entity
  id: LockerClown
  name: clown locker
  parent: LockerBaseSecure
  components:
  - type: Appearance
  - type: AccessReader
    access: [["Theatre"]]
  - type: EntityStorageVisuals
    stateBaseClosed: clown
    stateDoorOpen: generic_open3
    stateDoorClosed: clown_door

# Mime
- type: entity
  id: LockerMime
  name: mime locker
  parent: LockerBaseSecure
  components:
  - type: Appearance
  - type: AccessReader
    access: [["Theatre"]]
  - type: EntityStorageVisuals
    stateBaseClosed: mime
    stateDoorOpen: generic_open4
    stateDoorClosed: mime_door

# Magistrate
- type: entity
  id: LockerMagistrate
  name: magistrate's locker
  parent: LockerBaseSecure
  components:
  - type: Appearance
  - type: AccessReader
    access: [["Magistrate"]]
  - type: EntityStorageVisuals
    stateBaseClosed: magistrate
    stateDoorOpen: magistrate_open
    stateDoorClosed: magistrate_door

# Lawyer
- type: entity
  id: LockerLawyer
  name: lawyer's locker
  parent: LockerBaseSecure
  components:
  - type: Appearance
  - type: AccessReader
    access: [["Lawyer"]]
  - type: EntityStorageVisuals
    stateBaseClosed: color_black
    stateDoorOpen: color_black_open
    stateDoorClosed: lawyer_door

# CentComm
- type: entity
  id: LockerRepresentative
  name: representative locker
  parent: LockerBaseSecure
  components:
  - type: Appearance
  - type: AccessReader
    access: [["CentralCommand"]]
  - type: EntityStorageVisuals
    stateBaseClosed: representative
    stateDoorOpen: color_black3_open
    stateDoorClosed: representative_door

- type: entity
  id: LockerCentComm
  name: CentComm locker
  parent: LockerBaseSecure
  components:
  - type: Appearance
  - type: AccessReader
    access: [["CentralCommand"]]
  - type: EntityStorageVisuals
    stateBaseClosed: cc
    stateDoorOpen: color_black3_open
    stateDoorClosed: cc_door

# BlueShield
- type: entity
  id: LockerBlueshield
  name: CentComm locker
  parent: LockerBaseSecure
  components:
  - type: Appearance
  - type: AccessReader
    access: [["BlueShield"]]
  - type: EntityStorageVisuals
    stateBaseClosed: blueshield
    stateDoorOpen: color_black2_open
    stateDoorClosed: blueshield_door

# New Tacticals
- type: entity
  id: LockerTacWeaponry
  name: tactical weaponry locker
  parent: LockerBaseSecure
  components:
  - type: Appearance
  - type: AccessReader
    access: [["Armory"]]
  - type: EntityStorageVisuals
    stateBaseClosed: tac
    stateDoorOpen: generic_open4
    stateDoorClosed: tac_weaponry

- type: entity
  id: LockerTacShotgun
  name: tactical shotgun locker
  parent: LockerBaseSecure
  components:
  - type: Appearance
  - type: AccessReader
    access: [["Armory"]]
  - type: EntityStorageVisuals
    stateBaseClosed: tac
    stateDoorOpen: generic_open4
    stateDoorClosed: tac_shotgun

- type: entity
  id: LockerTacElec
  name: tactical electrical supplies locker
  parent: LockerBaseSecure
  components:
  - type: Appearance
  - type: AccessReader
    access: [["Armory"]]
  - type: EntityStorageVisuals
    stateBaseClosed: tac
    stateDoorOpen: generic_open4
    stateDoorClosed: tac_elec

- type: entity
  id: LockerTacArmory
  name: tactical armory locker
  parent: LockerBaseSecure
  components:
  - type: Appearance
  - type: AccessReader
    access: [["Armory"]]
  - type: EntityStorageVisuals
    stateBaseClosed: tac
    stateDoorOpen: generic_open4
    stateDoorClosed: tac_armory
