using Content.Client.Lobby;
using Content.Shared.Humanoid.Prototypes;
using Content.Shared.Roles;
using Content.Shared.StationRecords;
using Robust.Client.AutoGenerated;
using Robust.Client.UserInterface;
using Robust.Client.UserInterface.XAML;
using Robust.Shared.Enums;
using Robust.Shared.Map;
using Robust.Shared.Prototypes;

namespace Content.Client.StationRecords;

[GenerateTypedNameReferences]
public sealed partial class GeneralRecord : Control
{
    // ADT Station Records Showcase Start
    private readonly LobbyUIController _ui;
    private readonly IEntityManager _ent;
    public EntityUid? CurrentShowcase;
    // ADT Station Records Showcase End

    public Action<uint>? OnDeletePressed;
    public GeneralRecord(GeneralStationRecord record, bool canDelete, uint? id, IEntityManager ent, IPrototypeManager proto)    // ADT Station Records Showcase Tweaked
    {
        RobustXamlLoader.Load(this);
        // ADT Station Records Showcase Start
        _ui = UserInterfaceManager.GetUIController<LobbyUIController>();
        _ent = ent;
        _ent.DeleteEntity(CurrentShowcase);
        var dummy = _ui.LoadProfileEntity(record.Profile, proto.Index<JobPrototype>(record.JobPrototype), true);
        Showcase.SetEntity(dummy);

        RecordName.SetMessage(record.Name, defaultColor: Color.White);
        Age.SetMessage(Loc.GetString("general-station-record-console-record-age", ("age", record.Age.ToString())), defaultColor: Color.White);
        Title.SetMessage(Loc.GetString("general-station-record-console-record-title",
            ("job", Loc.GetString(record.JobTitle))), defaultColor: Color.White);
        Species.SetMessage(Loc.GetString("general-station-record-console-record-species", ("species", Loc.GetString("species-name-" + record.Species.ToLower()))), defaultColor: Color.White);
        Gender.SetMessage(Loc.GetString("general-station-record-console-record-gender",
            ("sex", Loc.GetString("station-records-sex-" + record.Profile.Sex.ToString().ToLower()))), defaultColor: Color.White);
        // // ADT Station Records Showcase End
        Fingerprint.Text = Loc.GetString("general-station-record-console-record-fingerprint",
            ("fingerprint", record.Fingerprint ?? Loc.GetString("generic-not-available-shorthand")));
        Dna.Text = Loc.GetString("general-station-record-console-record-dna",
            ("dna", record.DNA ?? Loc.GetString("generic-not-available-shorthand")));

        if (canDelete && id != null )
        {
            DeleteButton.Visible = true;
            DeleteButton.OnPressed += _ => OnDeletePressed?.Invoke(id.Value);
        }
    }

    // ADT Station Records Showcase Start
    protected override void Dispose(bool disposing)
    {
        base.Dispose(disposing);
        _ent.DeleteEntity(CurrentShowcase);
    }
    // ADT Station Records Showcase End
}
