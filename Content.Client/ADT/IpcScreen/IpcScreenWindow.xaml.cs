using Content.Shared.Humanoid.Markings;
using Content.Shared.ADT.IpcScreen;
using Robust.Client.AutoGenerated;
using Robust.Client.UserInterface.Controls;
using Robust.Client.UserInterface.CustomControls;
using Robust.Client.UserInterface.XAML;

namespace Content.Client.ADT.IpcScreen;

[GenerateTypedNameReferences]
public sealed partial class IpcScreenWindow : DefaultWindow
{
    public Action<(int slot, string id)>? OnFacialHairSelected;
    public Action<(int slot, Marking marking)>? OnFacialHairColorChanged;
    public Action<int>? OnFacialHairSlotRemoved;
    public Action? OnFacialHairSlotAdded;

    public IpcScreenWindow()
    {
        RobustXamlLoader.Load(this);

        FacialHairPicker.OnMarkingSelect += args => OnFacialHairSelected!(args);
        FacialHairPicker.OnColorChanged += args => OnFacialHairColorChanged!(args);
        FacialHairPicker.OnSlotRemove += args => OnFacialHairSlotRemoved!(args);
        FacialHairPicker.OnSlotAdd += delegate { OnFacialHairSlotAdded!(); };
    }

    public void UpdateState(IpcScreenUiState state)
    {
        FacialHairPicker.UpdateData(state.FacialHair, state.Species, state.FacialHairSlotTotal);

        if (!FacialHairPicker.Visible)
        {
            AddChild(new Label { Text = Loc.GetString("magic-mirror-component-activate-user-has-no-hair") });
        }
    }
}
