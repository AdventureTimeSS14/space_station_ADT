using Content.Client.Stylesheets;
using Content.Client.UserInterface.Controls;
using Content.Shared.Research.Prototypes;
using Content.Shared.Xenoarchaeology.Equipment;
using Microsoft.VisualBasic;
using Robust.Client.AutoGenerated;
using Robust.Client.GameObjects;
using Robust.Client.UserInterface;
using Robust.Client.UserInterface.Controls;
using Robust.Client.UserInterface.XAML;
using Robust.Shared.Prototypes;
using Robust.Shared.Timing;
using Robust.Shared.Utility;

namespace Content.Client.ADT.Research.UI;

[GenerateTypedNameReferences]
public sealed partial class TechnologyInfoPanel : Control
{
    [Dependency] private readonly IEntityManager _ent = default!;
    [Dependency] private readonly IPrototypeManager _proto = default!;

    public TechnologyPrototype Prototype;
    public Action<TechnologyPrototype>? BuyAction;
    public TechnologyInfoPanel(TechnologyPrototype proto, SpriteSystem sprite, int points, bool hasAccess)
    {
        RobustXamlLoader.Load(this);
        IoCManager.InjectDependencies(this);
        Prototype = proto;
        TechnologyNameLabel.Text = Loc.GetString(proto.Name);
        DisciplineTexture.Texture = sprite.Frame0(_proto.Index<TechDisciplinePrototype>(proto.Discipline).Icon);
        TechnologyTexture.Texture = sprite.Frame0(proto.Icon);

        if (!hasAccess)
            ResearchButton.ToolTip = Loc.GetString("research-console-no-access-popup");

        ResearchButton.Disabled = points < proto.Cost || !hasAccess;
        ResearchButton.OnPressed += _ => BuyAction?.Invoke(Prototype);
    }

}
