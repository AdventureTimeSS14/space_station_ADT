using Robust.Client.UserInterface.Controls;
using Content.Client.UserInterface.Controls;
using Robust.Client.AutoGenerated;
using Robust.Client.GameObjects;
using Robust.Client.UserInterface.XAML;
using Content.Shared.ADT.Storage.Components;
using Robust.Shared.Prototypes;
using System.Numerics;

namespace Content.Client.ADT.Storage.SuitStorage.UI;

[GenerateTypedNameReferences]
public sealed partial class SuitStorageMenu : RadialMenu
{
    [Dependency] private readonly IEntityManager _entMan = default!;
    [Dependency] private readonly IPrototypeManager _proto = default!;
    private readonly SpriteSystem _sprite;

    public event Action<int>? OnSelected;

    public SuitStorageMenu()
    {
        RobustXamlLoader.Load(this);
        IoCManager.InjectDependencies(this);

        _sprite = _entMan.System<SpriteSystem>();
    }

    public void SetEntity(EntityUid owner)
    {
        if (!_entMan.TryGetComponent<SuitStorageComponent>(owner, out var comp))
            return;

        for (int i = 0; i < comp.Options.Count; i++)
        {
            var index = i;
            var proto = _proto.Index(comp.Options[i]);

            var button = new RadialMenuTextureButtonWithSector
            {
                SetSize = new Vector2(64f, 64f),
                ToolTip = Loc.GetString(proto.Name)
            };

            var texture = _sprite.GetPrototypeIcon(proto);

            button.AddChild(new TextureRect()
            {
                VerticalAlignment = VAlignment.Center,
                HorizontalAlignment = HAlignment.Center,
                Texture = texture?.Default,
                TextureScale = new Vector2(2f, 2f)
            });

            button.OnPressed += _ => OnSelected?.Invoke(index);
            Main.AddChild(button);
        }
    }
}