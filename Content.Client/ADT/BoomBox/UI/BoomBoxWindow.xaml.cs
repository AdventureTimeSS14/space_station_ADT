using System.Linq;
using Content.Shared.BoomBox;
using Robust.Client.AutoGenerated;
using Robust.Client.UserInterface.CustomControls;
using Robust.Client.UserInterface.XAML;

namespace Content.Client.ADT.BoomBox.UI;

[GenerateTypedNameReferences]
public sealed partial class BoomBoxWindow : DefaultWindow
{
    public event Action? MinusVolButtonPressed;
    public event Action? PlusVolButtonPressed;
    public event Action? StartButtonPressed;
    public event Action? StopButtonPressed;

    public BoomBoxWindow()
    {
        RobustXamlLoader.Load(this);

        MinusVolButton.OnPressed += _ => MinusVolButtonPressed?.Invoke();
        PlusVolButton.OnPressed += _ => PlusVolButtonPressed?.Invoke();
        StartButton.OnPressed += _ => StartButtonPressed?.Invoke();
        StopButton.OnPressed += _ => StopButtonPressed?.Invoke();
    }

    public void UpdateState(BoomBoxUiState state)
    {
        MinusVolButton.Disabled = !state.CanMinusVol;
        PlusVolButton.Disabled = !state.CanPlusVol;
        StartButton.Disabled = !state.CanStart;
        StopButton.Disabled = !state.CanStop;
    }
}
