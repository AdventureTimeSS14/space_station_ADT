using System.Numerics;
using Content.Client.UserInterface.Controls;
using Robust.Client.AutoGenerated;
using Robust.Client.GameObjects;
using Robust.Client.UserInterface.Controls;
using Robust.Client.UserInterface.XAML;
using Robust.Shared.Utility;
using Robust.Shared.Map;
using Content.Shared.Mech;
using Content.Shared.Mech.Equipment.Components;

namespace Content.Client.ADT.Mech.UI;

[GenerateTypedNameReferences]
public sealed partial class MechEquipmentMenu : RadialMenu
{
    [Dependency] private readonly EntityManager _entManager = default!;

    public event Action<NetEntity?>? OnSelectEquip;

    public MechEquipmentMenu()
    {
        IoCManager.InjectDependencies(this);
        RobustXamlLoader.Load(this);
    }

    public void Populate(List<NetEntity> equip)
    {
        var spriteSystem = _entManager.System<SpriteSystem>();
        var parent = FindControl<RadialContainer>("Main");
        parent.DisposeAllChildren();

        var noButton = new MechEquipmentMenuButton
        {
            StyleClasses = { "RadialMenuButton" },
            SetSize = new Vector2(64f, 64f),
            ToolTip = Loc.GetString("Ничего" ?? String.Empty),
            Entity = null,
        };

        var tex = new TextureRect
        {
            VerticalAlignment = VAlignment.Center,
            HorizontalAlignment = HAlignment.Center,
            Texture = spriteSystem.Frame0(new SpriteSpecifier.Texture(new("/Textures/Interface/Default/blocked.png"))),
            TextureScale = new Vector2(2f, 2f),
        };

        noButton.OnPressed += _ => OnSelectEquip?.Invoke(null);
        noButton.AddChild(tex);
        parent.AddChild(noButton);

        foreach (var item in equip)
        {
            if (!_entManager.TryGetEntityData(item, out var ent, out var meta))
                continue;
            if (!_entManager.GetComponent<MechEquipmentComponent>(ent.Value).CanBeUsed)
                continue;

            var dummy = _entManager.SpawnEntity(meta.EntityPrototype?.ID, MapCoordinates.Nullspace);
            var face = new SpriteView();
            face.SetEntity(dummy);

            var button = new MechEquipmentMenuButton
            {
                StyleClasses = { "RadialMenuButton" },
                SetSize = new Vector2(64f, 64f),
                ToolTip = Loc.GetString(meta.EntityName ?? string.Empty),
                Entity = item,
            };

            button.OnPressed += _ => OnSelectEquip?.Invoke(item);
            button.AddChild(face);
            parent.AddChild(button);
        }
    }
}


public sealed class MechEquipmentMenuButton : RadialMenuTextureButtonWithSector
{
    public NetEntity? Entity;
}
