using Content.Shared.ADT.Roadmap;
using Robust.Client.AutoGenerated;
using Robust.Client.UserInterface.Controls;
using Robust.Client.UserInterface.CustomControls;
using Robust.Client.UserInterface.XAML;
using Robust.Shared.Utility;

namespace Content.Client.ADT.Roadmap;

[GenerateTypedNameReferences]
public sealed partial class RoadmapWindow : DefaultWindow
{
    public RoadmapWindow()
    {
        RobustXamlLoader.Load(this);
        var msg = new FormattedMessage();
        var currentYear = System.DateTime.Now.Year;

        msg.AddMarkupOrThrow($"[font size=24]ДОРОЖНАЯ КАРТА [bold]{currentYear}[/bold][/font]");
        Header.SetMessage(msg);
    }

    public void Populate(List<RoadmapItemPrototype> list)
    {
        foreach (var item in list)
        {
            var name = Loc.GetString(item.Name);
            var desc = Loc.GetString(item.Description);
            RoadmapItem roadmapItem = new()
            {
                HeaderText = name,
                Text = desc,
                ItemState = item.State
            };

            switch (item.State)
            {
                case RoadmapItemState.Planned:
                    {
                        Planned.AddChild(roadmapItem);
                        break;
                    }
                case RoadmapItemState.InProgress:
                    {
                        InProgress.AddChild(roadmapItem);
                        break;
                    }
                case RoadmapItemState.Partial:
                    {
                        InProgress.AddChild(roadmapItem);
                        break;
                    }
                case RoadmapItemState.Complete:
                    {
                        Complete.AddChild(roadmapItem);
                        break;
                    }
                default:
                    throw new IndexOutOfRangeException();
            }
        }
    }
}
