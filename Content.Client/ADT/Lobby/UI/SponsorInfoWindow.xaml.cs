using Content.Client.Corvax.Sponsors;
using JetBrains.Annotations;
using Robust.Client.AutoGenerated;
using Robust.Client.UserInterface.CustomControls;
using Robust.Client.UserInterface.XAML;
using Robust.Shared.Utility;

namespace Content.Client.Lobby.UI;

[GenerateTypedNameReferences]
[UsedImplicitly]
public sealed partial class SponsorInfoWindow : DefaultWindow
{
    [Dependency] private readonly SponsorsManager _sponsorsManager = default!;

    public SponsorInfoWindow()
    {
        RobustXamlLoader.Load(this);
        IoCManager.InjectDependencies(this);

        UpdateSponsorInfo();
    }

    private void UpdateSponsorInfo()
    {
        List<string> lines;

        if (_sponsorsManager.TryGetInfo(out var sponsor))
        {
            lines = new List<string>
            {
                $"[color=yellow]Никнейм:[/color] {sponsor.CharacterName}",
                $"[color=yellow]Уровень спонсорства:[/color] {sponsor.Tier ?? 0}",
                $"[color=yellow]Цвет OOC:[/color] {sponsor.OOCColor ?? "не задан"}",
                $"[color=yellow]Приоритетный вход:[/color] {(sponsor.HavePriorityJoin ? "Да" : "Нет")}",
                $"[color=yellow]Дата окончания:[/color] {sponsor.ExpireDate:dd.MM.yyyy}",
                $"[color=yellow]Разрешены профессии:[/color] {(sponsor.AllowJob ? "Да" : "Нет")}"
            };
        }
        else
        {
            lines = new List<string>
            {
                "[color=yellow]Никнейм:[/color] —",
                "[color=yellow]Уровень спонсорства:[/color] —",
                "[color=yellow]Цвет OOC:[/color] —",
                "[color=yellow]Приоритетный вход:[/color] —",
                "[color=yellow]Дата окончания:[/color] —",
                "[color=yellow]Разрешены профессии:[/color] —"
            };
        }

        var formatted = new FormattedMessage();
        formatted.AddMarkup(string.Join("\n", lines));
        SponsorLabel.SetMessage(formatted);
    }
}
