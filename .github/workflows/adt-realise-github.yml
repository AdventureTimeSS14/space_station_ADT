name: Create GitHub Release from File

on:
  workflow_dispatch:
  push:
    branches:
      - master

jobs:
  create-release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up environment variables
        run: |
          FILE_URL="https://builds.adventurestation.space/builds/${{ github.sha }}"
          FILE_NAME="SS14.Server_win-x64.zip"
          echo "FILE_URL=${FILE_URL}" >> $GITHUB_ENV
          echo "FILE_NAME=${FILE_NAME}" >> $GITHUB_ENV

      - name: Download file from the website
        run: |
          echo "Downloading file from ${FILE_URL}"
          curl -L -o $FILE_NAME $FILE_URL
        continue-on-error: true

      - name: Create GitHub Release
        run: |
          echo "Creating release with tag v${{ github.sha }}"

          # Create a release with the tag v${{ github.sha }}
          response=$(curl -X POST -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -d '{
                  "tag_name": "v${{ github.sha }}",
                  "target_commitish": "main",  # or use the specific commit SHA
                  "name": "Release v${{ github.sha }}",
                  "body": "Release for build ${{ github.sha }}",
                  "draft": false,
                  "prerelease": false
                }' \
            https://api.github.com/repos/${{ github.repository }}/releases)
          
          echo "Response: $response"
        
          RELEASE_ID=$(echo $response | jq .id)
          echo "Release ID: $RELEASE_ID"

      - name: Upload asset to the release
        run: |
          echo "Uploading asset to release"

          # Upload the file to the release
          curl -X POST -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -H "Content-Type: application/zip" \
            --data-binary @"$FILE_NAME" \
            "https://uploads.github.com/repos/${{ github.repository }}/releases/$RELEASE_ID/assets?name=$FILE_NAME"
          
      - name: Clean up
        run: |
          echo "Cleaning up temporary files"
          rm -f $FILE_NAME
